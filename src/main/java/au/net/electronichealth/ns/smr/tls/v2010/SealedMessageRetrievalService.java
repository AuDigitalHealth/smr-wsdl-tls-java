
package au.net.electronichealth.ns.smr.tls.v2010;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.3-b01-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SealedMessageRetrievalService", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", wsdlLocation = "smd-SealedMessageRetrieval-TLS-2010.wsdl")
public class SealedMessageRetrievalService
    extends Service
{

    private final static URL SEALEDMESSAGERETRIEVALSERVICE_WSDL_LOCATION;
    private final static WebServiceException SEALEDMESSAGERETRIEVALSERVICE_EXCEPTION;
    private final static QName SEALEDMESSAGERETRIEVALSERVICE_QNAME = new QName("http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", "SealedMessageRetrievalService");

    static {
        SEALEDMESSAGERETRIEVALSERVICE_WSDL_LOCATION = au.net.electronichealth.ns.smr.tls.v2010.SealedMessageRetrievalService.class.getResource("smd-SealedMessageRetrieval-TLS-2010.wsdl");
        WebServiceException e = null;
        if (SEALEDMESSAGERETRIEVALSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'smd-SealedMessageRetrieval-TLS-2010.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        SEALEDMESSAGERETRIEVALSERVICE_EXCEPTION = e;
    }

    public SealedMessageRetrievalService() {
        super(__getWsdlLocation(), SEALEDMESSAGERETRIEVALSERVICE_QNAME);
    }

    public SealedMessageRetrievalService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SEALEDMESSAGERETRIEVALSERVICE_QNAME, features);
    }

    public SealedMessageRetrievalService(URL wsdlLocation) {
        super(wsdlLocation, SEALEDMESSAGERETRIEVALSERVICE_QNAME);
    }

    public SealedMessageRetrievalService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SEALEDMESSAGERETRIEVALSERVICE_QNAME, features);
    }

    public SealedMessageRetrievalService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SealedMessageRetrievalService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SealedMessageRetrieval
     */
    @WebEndpoint(name = "SealedMessageRetrieval")
    public SealedMessageRetrieval getSealedMessageRetrieval() {
        return super.getPort(new QName("http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", "SealedMessageRetrieval"), SealedMessageRetrieval.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SealedMessageRetrieval
     */
    @WebEndpoint(name = "SealedMessageRetrieval")
    public SealedMessageRetrieval getSealedMessageRetrieval(WebServiceFeature... features) {
        return super.getPort(new QName("http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", "SealedMessageRetrieval"), SealedMessageRetrieval.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SEALEDMESSAGERETRIEVALSERVICE_EXCEPTION!= null) {
            throw SEALEDMESSAGERETRIEVALSERVICE_EXCEPTION;
        }
        return SEALEDMESSAGERETRIEVALSERVICE_WSDL_LOCATION;
    }

}
