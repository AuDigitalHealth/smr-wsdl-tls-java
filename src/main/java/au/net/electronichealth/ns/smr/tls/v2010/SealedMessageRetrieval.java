
package au.net.electronichealth.ns.smr.tls.v2010;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import au.net.electronichealth.ns.smd.types.sealedmessage.V2010.SealedMessageType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.3-b01-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SealedMessageRetrieval", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
@XmlSeeAlso({
    au.net.electronichealth.ns.smd.core.types.encryptedpayload.v2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.core.types.qualifiedcertref.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.core.types.standarderror.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.els.types.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smd.types.sealedmessage.V2010.ObjectFactory.class,
    au.net.electronichealth.ns.smr.tls.v2010.ObjectFactory.class,
    org.w3._2000._09.xmldsig.ObjectFactory.class,
    org.w3._2001._04.xmlenc.ObjectFactory.class
})
public interface SealedMessageRetrieval {


    /**
     * 
     * @param limit
     * @param allAvailable
     * @param receiverOrganisation
     * @return
     *     returns au.net.electronichealth.ns.smr.tls.v2010.MessageListType
     * @throws ListErrorMsg
     * @throws StandardErrorMsg
     */
    @WebMethod
    @WebResult(name = "list", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
    @RequestWrapper(localName = "list", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", className = "au.net.electronichealth.ns.smr.tls.v2010.List")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", className = "au.net.electronichealth.ns.smr.tls.v2010.ListResponse")
    @Action(input = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/listRequest", output = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/listResponse", fault = {
        @FaultAction(className = ListErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/list/Fault/listError"),
        @FaultAction(className = StandardErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/list/Fault/standardError")
    })
    public MessageListType list(
        @WebParam(name = "receiverOrganisation", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
        String receiverOrganisation,
        @WebParam(name = "allAvailable", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
        boolean allAvailable,
        @WebParam(name = "limit", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
        int limit)
        throws ListErrorMsg, StandardErrorMsg
    ;

    /**
     * 
     * @param receiverOrganisation
     * @param invocationId
     * @return
     *     returns java.util.List<au.net.electronichealth.ns.smd.types.sealedmessage.V2010.SealedMessageType>
     * @throws RetrieveErrorMsg
     * @throws StandardErrorMsg
     */
    @WebMethod
    @WebResult(name = "message", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
    @RequestWrapper(localName = "retrieve", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", className = "au.net.electronichealth.ns.smr.tls.v2010.Retrieve")
    @ResponseWrapper(localName = "retrieveResponse", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010", className = "au.net.electronichealth.ns.smr.tls.v2010.RetrieveResponse")
    @Action(input = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/retrieveRequest", output = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/retrieveResponse", fault = {
        @FaultAction(className = RetrieveErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/retrieve/Fault/retrieveError"),
        @FaultAction(className = StandardErrorMsg.class, value = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010/SealedMessageRetrieval/retrieve/Fault/standardError")
    })
    public List<SealedMessageType> retrieve(
        @WebParam(name = "receiverOrganisation", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
        String receiverOrganisation,
        @WebParam(name = "invocationId", targetNamespace = "http://ns.electronichealth.net.au/smd/svc/SealedMessageRetrieval/2010")
        List<String> invocationId)
        throws RetrieveErrorMsg, StandardErrorMsg
    ;

}
